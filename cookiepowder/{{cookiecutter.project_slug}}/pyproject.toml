[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = '{{cookiecutter.project_name}}'
version = '{{cookiecutter.version}}'
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
authors = [
    {name = '{{cookiecutter.github_username}}', email = '{{cookiecutter.email}}' }
]
maintainers = [
    {name = '{{cookiecutter.github_username}}', email = '{{cookiecutter.email}}' }
]
keywords = ['{{ cookiecutter.project_slug }}',]
{% if cookiecutter.open_source_license == 'MIT license' -%}
license = {text = "MIT license"}
{% elif cookiecutter.open_source_license == 'BSD license' -%}
license = {text = "BSD license"}
{% elif cookiecutter.open_source_license == 'ISC license' -%}
license = {text = "ISC license"}
{% elif cookiecutter.open_source_license == 'Apache Software License 2.0' -%}
license = {text = "Apache Software License 2.0"}
{% elif cookiecutter.open_source_license == 'GNU General Public License v3' -%}
license = {text = "GNU General Public License v3"}
{% else -%}
license = {text = "Proprietary"}
{% endif %}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: {% if cookiecutter.open_source_license != 'Not open source' -%} OSI Approved :: {% endif %} {{cookiecutter.open_source_license}}",
    {% if '{{cookiecutter.framework}}' != 'None' -%}"Framework :: {{cookiecutter.framework}}"{% endif %},
]
requires-python = '{{cookiecutter.python_version}}'

[project.dependencies]
docs = [
    'django >= 2.0',
    'asgiref ~= 3.7.2',
    'sqlparse ~= 0.4.4',
    'typing-extensions ~= 4.6.3',
]

[project.optional-dependencies]
{% if cookiecutter.command_line_interface != 'No Cli'-%}
cli = ['{{cookiecutter.command_line_interface}}']
{% endif %}
dev = [
    'bumpver >= 2023.1124',
    'wheel >= 0.40.0',
    'watchdog >= 3.0.0', # TODO: Is this necessary or worth keeping?
    'tox >= 4.5.1',
    'coverage >= 7.2.7', # TODO: Is this necessary or worth keeping?
    'twine >= 4.0.2',
    'build >= 0.10.0',
    {% if cookiecutter.use_pytest == 'y' -%}'pytest >= 7.3.2',{% endif %}
    {% if cookiecutter.use_black == 'y' -%}'black >= 21.7b0',{% endif %}
    ]
docs = [
    'sphinx >= 7.0.1',
    'myst-parser >= 2.0.0',
]


[project.urls] # TODO: Change Homepage to rtd?
Homepage = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'
Repository = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'

[project.scripts]
"manage.py" = "{{cookiecutter.project_slug}}:django_manage"


# ==== mypy ====
[tool.mypy]
python_version = '{{cookiecutter.python_version}}'
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
# plugins = []

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== Coverage ====
[tool.coverage.run]
include = ["{{cookiecutter.project_slug}}/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]



